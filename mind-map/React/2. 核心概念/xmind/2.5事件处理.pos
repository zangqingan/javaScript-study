{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[],"note":"","watermark":"","children":[{"parent":"root","lineStyle":{"lineColor":"#BBDEFB"},"children":[{"parent":"812b3a9306dd","children":[],"id":"0b3ad0067535","title":"React&nbsp;元素的事件处理和&nbsp;DOM&nbsp;元素的很相似，但是有一点语法上的不同"},{"parent":"812b3a9306dd","note":"","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"roundBroken","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#E57373","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"ac25a09c6779","title":"React&nbsp;事件的命名采用小驼峰式（camelCase），而不是纯小写","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"812b3a9306dd","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"roundBroken","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#E57373","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"4d70d73dad33","title":"使用&nbsp;JSX&nbsp;语法时你需要传入一个函数作为事件处理函数，而不是一个字符串<br>","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"1","text":"&#xe625"}]}],"style":{"background-color":"#BBDEFB","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"812b3a9306dd","title":"语法<br>"},{"parent":"root","lineStyle":{"lineColor":"#E1BEE7","lineWidth":"2"},"children":[{"parent":"896498dd7718","note":"function ActionLink() {\n  function handleClick(e) {\n    e.preventDefault();\n    console.log(&#39;The link was clicked.&#39;);\n  }\n\n  return (\n    &lt;a href=&quot;#&quot; onClick={handleClick}&gt;\n      Click me\n    &lt;/a&gt;\n  );\n}","children":[],"id":"3c25c1c2ba10","title":"在&nbsp;React&nbsp;中另一个不同点是你不能通过返回&nbsp;false&nbsp;的方式阻止默认行为。你必须显式的使用&nbsp;preventDefault","icons":[]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"font-style":"normal","border-radius":"5px","background-color":"#E1BEE7","lineStype":{"lineColor":"#E1BEE7","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#E1BEE7","lineWidth":"2"},"font-family":"微软雅黑","border-width":0,"border-style":"solid"},"id":"896498dd7718","title":"阻止默认行为<br>"},{"parent":"root","lineStyle":{"lineColor":"#FFCDD2","lineWidth":"2"},"children":[{"parent":"5bf8fe5c3c71","note":"","children":[],"id":"4b0af9a73e1a","title":"使用&nbsp;React&nbsp;时，一般不需要使用&nbsp;addEventListener&nbsp;为已创建的&nbsp;DOM&nbsp;元素添加监听器。事实上，你只需要在该元素初始渲染的时候添加监听器即可","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"5bf8fe5c3c71","children":[{"parent":"b327245658d2","note":"例如，下面的 Toggle 组件会渲染一个让用户切换开关状态的按钮：\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // 为了在回调中使用 `this`，这个绑定是必不可少的\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state =&gt; ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      &lt;button onClick={this.handleClick}&gt;\n        {this.state.isToggleOn ? &#39;ON&#39; : &#39;OFF&#39;}\n      &lt;/button&gt;\n    );\n  }\n}\n\nReactDOM.render(\n  &lt;Toggle /&gt;,\n  document.getElementById(&#39;root&#39;)\n);","children":[],"id":"7f112e0e3752","title":"例如"}],"id":"b327245658d2","title":"当你使用&nbsp;ES6&nbsp;class&nbsp;语法定义一个组件的时候，通常的做法是将事件处理函数声明为&nbsp;class&nbsp;中的方法<br>","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"1","text":"&#xe625"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","font-style":"normal","border-radius":"5px","background-color":"#FFCDD2","lineStype":{"lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"5bf8fe5c3c71","title":"添加监听器<br>"},{"parent":"root","lineStyle":{"lineColor":"#C8E6C9","lineWidth":"2"},"children":[{"parent":"a01eafed5bb9","note":"","children":[],"id":"15028f67c0e5","title":"你必须谨慎对待&nbsp;JSX&nbsp;回调函数中的&nbsp;this，在&nbsp;JavaScript&nbsp;中，class&nbsp;的方法默认不会绑定&nbsp;this。如果你忘记绑定&nbsp;this.handleClick&nbsp;并把它传入了&nbsp;onClick，当你调用这个函数的时候&nbsp;this&nbsp;的值为&nbsp;undefined<br>","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"a01eafed5bb9","children":[],"id":"412c765359ca","title":"这并不是&nbsp;React&nbsp;特有的行为；这其实与&nbsp;JavaScript&nbsp;函数工作原理有关。通常情况下，如果你没有在方法后面添加&nbsp;()，例如&nbsp;onClick={this.handleClick}，你应该为这个方法绑定&nbsp;this<br>","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"a01eafed5bb9","note":"class LoggingButton extends React.Component {\n  // 此语法确保 `handleClick` 内的 `this` 已被绑定。\n  // 注意: 这是 *实验性* 语法。\n  handleClick = () =&gt; {\n    console.log(&#39;this is:&#39;, this);\n  }\n\n  render() {\n    return (\n      &lt;button onClick={this.handleClick}&gt;\n        Click me\n      &lt;/button&gt;\n    );\n  }\n}","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"roundBroken","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"793c480c9601","title":"如果觉得使用&nbsp;bind&nbsp;很麻烦，这里有两种方式可以解决。如果你正在使用实验性的&nbsp;public&nbsp;class&nbsp;fields&nbsp;语法，你可以使用&nbsp;class&nbsp;fields&nbsp;正确的绑定回调函数。<br>Create&nbsp;React&nbsp;App&nbsp;默认启用此语法<br>","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"a01eafed5bb9","note":"class LoggingButton extends React.Component {\n  handleClick() {\n    console.log(&#39;this is:&#39;, this);\n  }\n\n  render() {\n    // 此语法确保 `handleClick` 内的 `this` 已被绑定。\n    return (\n      &lt;button onClick={() =&gt; this.handleClick()}&gt;\n        Click me\n      &lt;/button&gt;\n    );\n  }\n}","children":[{"parent":"d39b88848e99","children":[],"id":"ae9a530ad5c6","title":"此语法问题在于每次渲染&nbsp;LoggingButton&nbsp;时都会创建不同的回调函数。<br>在大多数情况下，这没什么问题，<br>但如果该回调函数作为&nbsp;prop&nbsp;传入子组件时，这些组件可能会进行额外的重新渲染。<br>我们通常建议在构造器中绑定或使用&nbsp;class&nbsp;fields&nbsp;语法来避免这类性能问题"}],"id":"d39b88848e99","title":"如果你没有使用&nbsp;class&nbsp;fields&nbsp;语法，你可以在回调中使用箭头函数","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"3","text":"&#xe635"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","font-style":"normal","border-radius":"5px","background-color":"#C8E6C9","lineStype":{"lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#C8E6C9","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"a01eafed5bb9","title":"this问题<br>"},{"parent":"root","lineStyle":{"lineColor":"#FFE0B2","lineWidth":"2"},"children":[{"parent":"cecb23f7996e","note":"","children":[],"id":"10eb40fe09d6","title":"在循环中，通常我们会为事件处理函数传递额外的参数","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"cecb23f7996e","children":[{"parent":"9e830d23e729","children":[],"id":"34c4a38f786d","title":"&lt;button&nbsp;onClick={(e)&nbsp;=&gt;&nbsp;this.deleteRow(id,&nbsp;e)}&gt;Delete&nbsp;Row&lt;/button&gt;"},{"parent":"9e830d23e729","children":[],"id":"0ecd058eb322","title":"&lt;button&nbsp;onClick={this.deleteRow.bind(this,&nbsp;id)}&gt;Delete&nbsp;Row&lt;/button&gt;"},{"parent":"9e830d23e729","children":[],"id":"572f438cc607","title":"上述两种方式是等价的，分别通过箭头函数和&nbsp;Function.prototype.bind&nbsp;来实现"}],"id":"9e830d23e729","title":"例如，若&nbsp;id&nbsp;是你要删除那一行的&nbsp;ID，以下两种方式都可以向事件处理函数传递参数：<br>","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"cecb23f7996e","children":[],"style":{"color":"#E57373"},"id":"3e27caf3cc77","title":"在这两种情况下，React&nbsp;的事件对象&nbsp;e&nbsp;会被作为第二个参数传递。如果通过箭头函数的方式，事件对象必须显式的进行传递，而通过&nbsp;bind&nbsp;的方式，事件对象以及更多的参数将会被隐式的进行传递","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"2","text":"&#xe62a"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"font-style":"normal","border-radius":"5px","background-color":"#FFE0B2","lineStype":{"lineColor":"#FFE0B2","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#FFE0B2","lineWidth":"2"},"font-family":"微软雅黑","border-width":0,"border-style":"solid"},"id":"cecb23f7996e","title":"传参<br>"}],"root":true,"theme":"customise_7fd055efa78b","style":{"background-color":"#2196F3","border-radius":"6px","color":"rgb(255, 255, 255)","font-weight":"bold","border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"root","title":"事件处理","icons":[{"color":"rgb(255, 255, 255)","name":"","index":"46"}],"structure":"mind_free"}},"meta":{"exportTime":"2022-04-01 15:09:55","member":"60cca488e0b34d55bbf2954f","diagramInfo":{"creator":"60cca488e0b34d55bbf2954f","created":"2022-04-01 14:52:54","modified":"2022-04-01 15:09:36","title":"2.5事件处理","category":"mind_free"},"id":"6246a14607912907096f809b","type":"ProcessOn Schema File","version":"1.0"}}