{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[],"note":"","margin":{"childMarginW":10,"childMarginH":5,"marginW":20,"marginH":10},"watermark":"","children":[{"parent":"root","lineStyle":{"lineColor":"#1976D2"},"children":[{"parent":"3b7f7da9d693","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#0D47A1","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"1d57845dec4f","title":"React&nbsp;最棒的部分之一是引导我们思考如何构建一个应用","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"3b7f7da9d693","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"0f616bb19aaa","title":"下面我们将会通过&nbsp;React&nbsp;构建一个可搜索的产品数据表格来更深刻地领会&nbsp;React&nbsp;哲学","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]}],"style":{"background-color":"#1976D2","border-radius":"5px","font-weight":"bold","font-size":13},"id":"3b7f7da9d693","title":"简介"},{"parent":"root","lineStyle":{"lineColor":"#388E3C","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"children":[{"parent":"0291282e6d37","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"0e25a6a0a3ce","image":{"w":49,"h":59,"url":"http://cdn.processon.com/6247bb1d079129070972310e?e=1648871725&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:JAwaO7s38TzWUUM8ZoHvdJIrECM="},"children":[],"id":"f8552efca87f","title":""}],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"0e25a6a0a3ce","title":"假设我们已经有了一个返回&nbsp;JSON&nbsp;的&nbsp;API，以及设计师提供的组件设计稿","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"0291282e6d37","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"d56b506ce56b","note":"[\n  {category: &quot;Sporting Goods&quot;, price: &quot;$49.99&quot;, stocked: true, name: &quot;Football&quot;},\n  {category: &quot;Sporting Goods&quot;, price: &quot;$9.99&quot;, stocked: true, name: &quot;Baseball&quot;},\n  {category: &quot;Sporting Goods&quot;, price: &quot;$29.99&quot;, stocked: false, name: &quot;Basketball&quot;},\n  {category: &quot;Electronics&quot;, price: &quot;$99.99&quot;, stocked: true, name: &quot;iPod Touch&quot;},\n  {category: &quot;Electronics&quot;, price: &quot;$399.99&quot;, stocked: false, name: &quot;iPhone 5&quot;},\n  {category: &quot;Electronics&quot;, price: &quot;$199.99&quot;, stocked: true, name: &quot;Nexus 7&quot;}\n];","children":[],"id":"a1dfed12f9f6","title":"数据"}],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"d56b506ce56b","title":"该&nbsp;JSON&nbsp;API&nbsp;会返回以下数据","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"rgb(255, 255, 255)","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","font-style":"normal","border-radius":"5px","background-color":"#388E3C","lineStype":{"lineColor":"#388E3C","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#388E3C","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"0291282e6d37","title":"从设计稿开始<br>"},{"parent":"root","lineStyle":{"randomLineColor":"rgb(153,204,255)","lineColor":"#F57F17"},"children":[{"parent":"b653f7534587","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"4e45887e5c5d","title":"首先，你需要在设计稿上用方框圈出每一个组件（包括它们的子组件），并且以合适的名称命名。<br>如果你是和设计师一起完成此任务，那么他们可能已经做过类似的工作，所以请和他们进行交流！他们的&nbsp;Photoshop&nbsp;的图层名称可能最终就是你编写的&nbsp;React&nbsp;组件的名称","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"b653f7534587","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"464cdf10b55a","title":"但你如何确定应该将哪些部分划分到一个组件中呢？你可以将组件当作一种函数或者是对象来考虑，根据单一功能原则来判定组件的范围。<br>也就是说，一个组件原则上只能负责一个功能。如果它需要负责更多的功能，这时候就应该考虑将它拆分成更小的组件","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"b653f7534587","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"df19231a906c","title":"在实践中，因为你经常是在向用户展示&nbsp;JSON&nbsp;数据模型，所以如果你的模型设计得恰当，UI（或者说组件结构）便会与数据模型一一对应，这是因为&nbsp;UI&nbsp;和数据模型都会倾向于遵守相同的信息结构。将&nbsp;UI&nbsp;分离为组件，其中每个组件需与数据模型的某部分匹配","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"b653f7534587","image":{"w":106,"h":123,"url":"http://cdn.processon.com/6247bc5c0e3e74078d61f483?e=1648872044&amp;token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:Z2nT5A_iZ3_D8wzaD_ti-IMSwGo="},"lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"a3821005fcb2","children":[],"id":"353338b15696","title":"FilterableProductTable&nbsp;(橙色):&nbsp;是整个示例应用的整体"},{"parent":"a3821005fcb2","children":[],"id":"36bff0f12e22","title":"SearchBar&nbsp;(蓝色):&nbsp;接受所有的用户输入"},{"parent":"a3821005fcb2","children":[],"id":"bdee281408bf","title":"ProductTable&nbsp;(绿色):&nbsp;展示数据内容并根据用户输入筛选结果"},{"parent":"a3821005fcb2","children":[],"id":"02e672d10aa8","title":"ProductCategoryRow&nbsp;(天蓝色):&nbsp;为每一个产品类别展示标题"},{"parent":"a3821005fcb2","children":[],"id":"1679e36f9045","title":"ProductRow&nbsp;(红色):&nbsp;每一行展示一个产品"}],"style":{"lineStype":{"lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","font-style":"normal"},"id":"a3821005fcb2","title":"<br>","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"3","text":"&#xe635"}],"summaries":[{"summary":true,"parent":"a3821005fcb2","children":[],"range":"0,4","style":{"background-color":"#F5F5F5","color":"#616161","lineType":"curve_complex","font-size":12,"lineColor":"#ff9f1a","lineWidth":"1","text-align":"left"},"id":"1b6778c1b5bd","title":"你可能注意到，ProductTable&nbsp;的表头（包含&nbsp;“Name”&nbsp;和&nbsp;“Price”&nbsp;的那一部分）<br>并未单独成为一个组件。这仅仅是一种偏好选择，如何处理这一问题也一直存在争论。<br>就这个示例而言，因为表头只起到了渲染数据集合的作用——这与&nbsp;ProductTable&nbsp;是一致的，<br>所以我们仍然将其保留为&nbsp;ProductTable&nbsp;的一部分。<br>但是，如果表头过于复杂，那么将它作为一个独立的&nbsp;ProductTableHeader&nbsp;组件就显得很有必要"}]},{"parent":"b653f7534587","children":[],"id":"f1733e55546f","title":"现在我们已经确定了设计稿中应该包含的组件，接下来我们将把它们描述为更加清晰的层级。设计稿中被其他组件包含的子组件，在层级上应该作为其子节点","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"4"}]}],"style":{"background-color":"#F57F17","border-radius":"5px","color":"rgb(255, 255, 255)","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"b653f7534587","title":"第一步：将设计好的&nbsp;UI&nbsp;划分为组件层级"},{"parent":"root","lineStyle":{"lineColor":"#E57373","lineWidth":"2"},"children":[{"parent":"2c0b8a719934","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"2851bd9e62f4","title":"现在我们已经确定了组件层级，可以编写对应的应用了。最容易的方式，是先用已有的数据模型渲染一个不包含交互功能的&nbsp;UI。最好将渲染&nbsp;UI&nbsp;和添加交互这两个过程分开。这是因为，编写一个应用的静态版本时，往往要编写大量代码，而不需要考虑太多交互细节；添加交互功能时则要考虑大量细节，而不需要编写太多代码。所以，将这两个过程分开进行更为合适。我们会在接下来的代码中体会到其中的区别","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"2c0b8a719934","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"cc5a0cace182","title":"在构建应用的静态版本时，我们需要创建一些会重用其他组件的组件，然后通过&nbsp;props&nbsp;传入所需的数据。props&nbsp;是父组件向子组件传递数据的方式。即使你已经熟悉了&nbsp;state&nbsp;的概念，也完全不应该使用&nbsp;state&nbsp;构建静态版本。state&nbsp;代表了随时间会产生变化的数据，应当仅在实现交互时使用。所以构建应用的静态版本时，你不会用到它","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"2c0b8a719934","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"ecc1066fc0ee","title":"你可以自上而下或者自下而上构建应用：自上而下意味着首先编写层级较高的组件（比如&nbsp;FilterableProductTable），自下而上意味着从最基本的组件开始编写（比如&nbsp;ProductRow）。当你的应用比较简单时，使用自上而下的方式更方便；对于较为大型的项目来说，自下而上地构建，并同时为低层组件编写测试是更加简单的方式","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"2c0b8a719934","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"9b9683f18bd9","title":"到此为止，你应该已经有了一个可重用的组件库来渲染你的数据模型。由于我们构建的是静态版本，所以这些组件目前只需提供&nbsp;render()&nbsp;方法用于渲染。最顶层的组件&nbsp;FilterableProductTable&nbsp;通过&nbsp;props&nbsp;接受你的数据模型。如果你的数据模型发生了改变，再次调用&nbsp;ReactDOM.render()，UI&nbsp;就会相应地被更新。数据模型变化、调用&nbsp;render()&nbsp;方法、UI&nbsp;相应变化，这个过程并不复杂，因此很容易看清楚&nbsp;UI&nbsp;是如何被更新的，以及是在哪里被更新的。React&nbsp;单向数据流（也叫单向绑定）的思想使得组件模块化，易于快速开发<br>","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"3","text":"&#xe635"}]},{"parent":"2c0b8a719934","children":[{"parent":"339f636aa904","children":[],"id":"60b3c706ef23","title":"在&nbsp;React&nbsp;中，有两类“模型”数据：props&nbsp;和&nbsp;state。清楚地理解两者的区别是十分重要的"}],"id":"339f636aa904","title":"补充说明<br>"}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#F5F5F5","textAlign":"left","font-weight":"bold","font-size":13,"font-style":"normal","border-radius":"5px","background-color":"#E57373","lineStype":{"lineColor":"#E57373","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#E57373","lineWidth":"2"},"font-family":"微软雅黑","border-width":0,"border-style":"solid"},"id":"2c0b8a719934","title":"第二步：用&nbsp;React&nbsp;创建一个静态版本"},{"parent":"root","lineStyle":{"lineColor":"#1976D2","lineWidth":"2"},"children":[{"parent":"f9685be6a938","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"0abe25f2a285","title":"想要使你的&nbsp;UI&nbsp;具备交互功能，需要有触发基础数据模型改变的能力。React&nbsp;通过实现&nbsp;state&nbsp;来完成这个任务。<br>为了正确地构建应用，你首先需要找出应用所需的&nbsp;state&nbsp;的最小表示，并根据需要计算出其他所有数据。其中的关键正是&nbsp;DRY:&nbsp;Don’t&nbsp;Repeat&nbsp;Yourself。只保留应用所需的可变&nbsp;state&nbsp;的最小集合，其他数据均由它们计算产生。比如，你要编写一个任务清单应用，你只需要保存一个包含所有事项的数组，而无需额外保存一个单独的&nbsp;state&nbsp;变量（用于存储任务个数）。当你需要展示任务个数时，只需要利用该数组的&nbsp;length&nbsp;属性即可","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"f9685be6a938","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"3cbbd750fec2","children":[],"id":"88f5ce1575a4","title":"包含所有产品的原始列表"},{"parent":"3cbbd750fec2","children":[],"id":"f8d4292848c2","title":"用户输入的搜索词"},{"parent":"3cbbd750fec2","children":[],"id":"d3e2d1632966","title":"复选框是否选中的值"},{"parent":"3cbbd750fec2","children":[],"id":"f0ff30fa5e0a","title":"经过搜索筛选的产品列表"}],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"3cbbd750fec2","title":"我们的示例应用拥有如下数据：","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"f9685be6a938","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"145da10da199","children":[],"style":{"color":"#0D47A1"},"id":"d8c7aeed0173","title":"该数据是否是由父组件通过&nbsp;props&nbsp;传递而来的？如果是，那它应该不是&nbsp;state。"},{"parent":"145da10da199","children":[],"style":{"color":"#0D47A1"},"id":"da9e799fc242","title":"该数据是否随时间的推移而保持不变？如果是，那它应该也不是&nbsp;state。"},{"parent":"145da10da199","children":[],"style":{"color":"#0D47A1"},"id":"a41305fc2d07","title":"你能否根据其他&nbsp;state&nbsp;或&nbsp;props&nbsp;计算出该数据的值？如果是，那它也不是&nbsp;state。"}],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"145da10da199","title":"通过问自己以下三个问题，你可以逐个检查相应数据是否属于&nbsp;state","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"f9685be6a938","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"7e64fe7fff7a","title":"包含所有产品的原始列表是经由&nbsp;props&nbsp;传入的，所以它不是&nbsp;state；搜索词和复选框的值应该是&nbsp;state，因为它们随时间会发生改变且无法由其他数据计算而来；经过搜索筛选的产品列表不是&nbsp;state，因为它的结果可以由产品的原始列表根据搜索词和复选框的选择计算出来<br>","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"3","text":"&#xe635"}]},{"parent":"f9685be6a938","children":[{"parent":"5d35c26f5036","children":[],"id":"a71c4d659754","title":"用户输入的搜索词"},{"parent":"5d35c26f5036","children":[],"id":"4d96805f6dcc","title":"复选框是否选中的值"}],"id":"5d35c26f5036","title":"综上所述，属于&nbsp;state&nbsp;的有："}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#F5F5F5","textAlign":"left","font-weight":"bold","font-size":13,"font-style":"normal","border-radius":"5px","background-color":"#1976D2","lineStype":{"lineColor":"#1976D2","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#1976D2","lineWidth":"2"},"font-family":"微软雅黑","border-width":0,"border-style":"solid"},"id":"f9685be6a938","title":"第三步：确定&nbsp;UI&nbsp;state&nbsp;的最小（且完整）表示"},{"parent":"root","lineStyle":{"lineColor":"#F44336","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"children":[{"parent":"ac506b5380d3","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"40016e60c201","title":"我们已经确定了应用所需的&nbsp;state&nbsp;的最小集合。接下来，我们需要确定哪个组件能够改变这些&nbsp;state，或者说拥有这些&nbsp;state。<br>注意：React&nbsp;中的数据流是单向的，并顺着组件层级从上往下传递。哪个组件应该拥有某个&nbsp;state&nbsp;这件事，对初学者来说往往是最难理解的部分。尽管这可能在一开始不是那么清晰，但你可以尝试通过以下步骤来判断","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"ac506b5380d3","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"e4eb47759d85","children":[],"id":"b3a676d979e2","title":"找到根据这个&nbsp;state&nbsp;进行渲染的所有组件。"},{"parent":"e4eb47759d85","children":[],"id":"c415330c6ac6","title":"找到他们的共同所有者（common&nbsp;owner）组件（在组件层级上高于所有需要该&nbsp;state&nbsp;的组件）。"},{"parent":"e4eb47759d85","children":[],"id":"bfd1021412fe","title":"该共同所有者组件或者比它层级更高的组件应该拥有该&nbsp;state。"},{"parent":"e4eb47759d85","children":[],"id":"e04e91c61ae8","title":"如果你找不到一个合适的位置来存放该&nbsp;state，就可以直接创建一个新的组件来存放该&nbsp;state，并将这一新组件置于高于共同所有者组件层级的位置。"}],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"e4eb47759d85","title":"对于应用中的每一个&nbsp;state","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"ac506b5380d3","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"2aaff084b81f","children":[],"id":"9ba46aa5b6fc","title":"ProductTable&nbsp;需要根据&nbsp;state&nbsp;筛选产品列表。SearchBar&nbsp;需要展示搜索词和复选框的状态。"},{"parent":"2aaff084b81f","children":[],"id":"773f8c3a4349","title":"他们的共同所有者是&nbsp;FilterableProductTable。"},{"parent":"2aaff084b81f","children":[],"id":"a6614a60070c","title":"因此，搜索词和复选框的值应该很自然地存放在&nbsp;FilterableProductTable&nbsp;组件中。"}],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"2aaff084b81f","title":"根据以上策略重新考虑我们的示例应用","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"ac506b5380d3","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"04ff08e53a55","title":"很好，我们已经决定把这些&nbsp;state&nbsp;存放在&nbsp;FilterableProductTable&nbsp;组件中。首先，将实例属性&nbsp;this.state&nbsp;=&nbsp;{filterText:&nbsp;'',&nbsp;inStockOnly:&nbsp;false}&nbsp;添加到&nbsp;FilterableProductTable&nbsp;的&nbsp;constructor&nbsp;中，设置应用的初始&nbsp;state；接着，将&nbsp;filterText&nbsp;和&nbsp;inStockOnly&nbsp;作为&nbsp;props&nbsp;传入&nbsp;ProductTable&nbsp;和&nbsp;SearchBar；最后，用这些&nbsp;props&nbsp;筛选&nbsp;ProductTable&nbsp;中的产品信息，并设置&nbsp;SearchBar&nbsp;的表单值。<br>你现在可以看到应用的变化了：将&nbsp;filterText&nbsp;设置为&nbsp;\"ball\"&nbsp;并刷新应用，你能发现表格中的数据已经更新了<br>","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"3","text":"&#xe635"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"rgb(255, 255, 255)","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","font-style":"normal","border-radius":"5px","background-color":"#F44336","lineStype":{"lineColor":"#7B1FA2","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#F44336","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"ac506b5380d3","title":"第四步：确定&nbsp;state&nbsp;放置的位置"},{"parent":"root","lineStyle":{"lineColor":"#7B1FA2","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"children":[{"parent":"dfa9047a40b3","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"074268f3c460","title":"到目前为止，我们已经借助自上而下传递的&nbsp;props&nbsp;和&nbsp;state&nbsp;渲染了一个应用。现在，我们将尝试让数据反向传递：处于较低层级的表单组件更新较高层级的&nbsp;FilterableProductTable&nbsp;中的&nbsp;state","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"dfa9047a40b3","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"0195fab0b7b0","title":"React&nbsp;通过一种比传统的双向绑定略微繁琐的方法来实现反向数据传递。尽管如此，但这种需要显式声明的方法更有助于人们理解程序的运作方式","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"dfa9047a40b3","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"cb9990e74346","title":"如果你在这时尝试在搜索框输入或勾选复选框，React&nbsp;不会产生任何响应。这是正常的，因为我们之前已经将&nbsp;input&nbsp;的值设置为了从&nbsp;FilterableProductTable&nbsp;的&nbsp;state&nbsp;传递而来的固定值","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"dfa9047a40b3","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"7397285ec804","title":"让我们重新梳理一下需要实现的功能：每当用户改变表单的值，我们需要改变&nbsp;state&nbsp;来反映用户的当前输入。由于&nbsp;state&nbsp;只能由拥有它们的组件进行更改，FilterableProductTable&nbsp;必须将一个能够触发&nbsp;state&nbsp;改变的回调函数（callback）传递给&nbsp;SearchBar。我们可以使用输入框的&nbsp;onChange&nbsp;事件来监视用户输入的变化，并通知&nbsp;FilterableProductTable&nbsp;传递给&nbsp;SearchBar&nbsp;的回调函数。然后该回调函数将调用&nbsp;setState()，从而更新应用<br>","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"3","text":"&#xe635"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"rgb(255, 255, 255)","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","font-style":"normal","border-radius":"5px","background-color":"#7B1FA2","lineStype":{"lineColor":"#7B1FA2","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#7B1FA2","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"dfa9047a40b3","title":"第五步：添加反向数据流"}],"root":true,"theme":"customise_7fd055efa78b","style":{"font-weight":"bold"},"id":"root","title":"React&nbsp;哲学<br>","icons":[{"color":"rgb(255, 255, 255)","name":"","index":"59"}],"structure":"mind_free"}},"meta":{"exportTime":"2022-04-02 11:22:28","member":"60cca488e0b34d55bbf2954f","diagramInfo":{"creator":"60cca488e0b34d55bbf2954f","created":"2022-04-02 10:52:37","modified":"2022-04-02 11:22:04","title":"2.11React 哲学","category":"mind_free"},"id":"6247ba756376890701a1385b","type":"ProcessOn Schema File","version":"1.0"}}