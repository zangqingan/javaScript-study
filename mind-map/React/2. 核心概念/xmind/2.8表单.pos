{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[],"note":"","margin":{"childMarginW":10,"childMarginH":5,"marginW":20,"marginH":10},"watermark":"","children":[{"parent":"root","lineStyle":{"lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"children":[{"parent":"20c25e0a8bcb","children":[],"id":"f78f08564058","title":"在&nbsp;React&nbsp;里，HTML&nbsp;表单元素的工作方式和其他的&nbsp;DOM&nbsp;元素有些不同，这是因为表单元素通常会保持一些内部的&nbsp;state","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"20c25e0a8bcb","note":"&lt;form&gt;\n  &lt;label&gt;\n    名字:\n    &lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt;\n  &lt;/label&gt;\n  &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;\n&lt;/form&gt;","children":[],"id":"3879dd9b233d","title":"例如这个纯&nbsp;HTML&nbsp;表单只接受一个名称","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"20c25e0a8bcb","children":[],"id":"9ad2ebdb547a","title":"此表单具有默认的&nbsp;HTML&nbsp;表单行为，即在用户提交表单后浏览到新页面。如果你在&nbsp;React&nbsp;中执行相同的代码，它依然有效。<br>但大多数情况下，使用&nbsp;JavaScript&nbsp;函数可以很方便的处理表单的提交，&nbsp;同时还可以访问用户填写的表单数据。实现这种效果的标准方式是使用“受控组件”","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"2","text":"&#xe62a"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#C8E6C9","lineStype":{"lineType":"curve","lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#F57F17","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"20c25e0a8bcb","title":"简介<br>"},{"parent":"root","lineStyle":{"lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"children":[{"parent":"4a4e937a1166","children":[],"id":"26f6456c6af4","title":"在&nbsp;HTML&nbsp;中，表单元素（如&lt;input&gt;、&nbsp;&lt;textarea&gt;&nbsp;和&nbsp;&lt;select&gt;）之类的表单元素通常自己维护&nbsp;state，并根据用户输入进行更新。<br>而在&nbsp;React&nbsp;中，可变状态（mutable&nbsp;state）通常保存在组件的&nbsp;state&nbsp;属性中，并且只能通过使用&nbsp;setState()来更新<br>","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"4a4e937a1166","children":[],"id":"38155145bf86","title":"我们可以把两者结合起来，使&nbsp;React&nbsp;的&nbsp;state&nbsp;成为“唯一数据源”。渲染表单的&nbsp;React&nbsp;组件还控制着用户输入过程中表单发生的操作。<br>被&nbsp;React&nbsp;以这种方式控制取值的表单输入元素就叫做“受控组件”","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"4a4e937a1166","children":[],"id":"b91414026afa","title":"对于受控组件来说，输入的值始终由&nbsp;React&nbsp;的&nbsp;state&nbsp;驱动。<br>你也可以将&nbsp;value&nbsp;传递给其他&nbsp;UI&nbsp;元素，或者通过其他事件处理函数重置，但这意味着你需要编写更多的代码","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"2","text":"&#xe62a"}]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#FFCDD2","lineStype":{"lineType":"curve","lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#FFCDD2","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"4a4e937a1166","title":"受控组件"},{"parent":"root","lineStyle":{"lineColor":"#E0E0E0","lineWidth":"2"},"children":[{"parent":"90f72e9b7182","note":"class EssayForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: &#39;请撰写一篇关于你喜欢的 DOM 元素的文章.&#39;\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert(&#39;提交的文章: &#39; + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      &lt;form onSubmit={this.handleSubmit}&gt;\n        &lt;label&gt;\n          文章:\n          &lt;textarea value={this.state.value} onChange={this.handleChange} /&gt;\n        &lt;/label&gt;\n        &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;\n      &lt;/form&gt;\n    );\n  }\n}","children":[],"id":"b06f894eea5b","title":"在&nbsp;HTML&nbsp;中,&nbsp;&lt;textarea&gt;&nbsp;元素通过其子元素定义其文本<br>而在&nbsp;React&nbsp;中，&lt;textarea&gt;&nbsp;使用&nbsp;value&nbsp;属性代替。这样，可以使得使用&nbsp;&lt;textarea&gt;&nbsp;的表单和使用单行&nbsp;input&nbsp;的表单非常类似<br>","icons":[]}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#E0E0E0","lineStype":{"lineType":"curve","lineColor":"#FFE0B2","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#E0E0E0","lineWidth":"2"},"font-family":"微软雅黑","border-width":0,"border-style":"solid"},"id":"90f72e9b7182","title":"textarea&nbsp;标签"},{"parent":"root","lineStyle":{"lineColor":"#BBDEFB","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"children":[{"parent":"a5fa884e620f","children":[],"id":"d3742cff6e16","title":"在&nbsp;HTML&nbsp;中，&lt;select&gt;&nbsp;创建下拉列表标签，selected&nbsp;属性表示默认选中","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"a5fa884e620f","note":"class FlavorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: &#39;coconut&#39;};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert(&#39;你喜欢的风味是: &#39; + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      &lt;form onSubmit={this.handleSubmit}&gt;\n        &lt;label&gt;\n          选择你喜欢的风味:\n          &lt;select value={this.state.value} onChange={this.handleChange}&gt;\n            &lt;option value=&quot;grapefruit&quot;&gt;葡萄柚&lt;/option&gt;\n            &lt;option value=&quot;lime&quot;&gt;酸橙&lt;/option&gt;\n            &lt;option value=&quot;coconut&quot;&gt;椰子&lt;/option&gt;\n            &lt;option value=&quot;mango&quot;&gt;芒果&lt;/option&gt;\n          &lt;/select&gt;\n        &lt;/label&gt;\n        &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;\n      &lt;/form&gt;\n    );\n  }\n}","children":[],"id":"bef60e8cb745","title":"而React&nbsp;并不会使用&nbsp;selected&nbsp;属性，而是在根&nbsp;select&nbsp;标签上使用&nbsp;value&nbsp;属性。这在受控组件中更便捷，因为您只需要在根标签中更新它","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"a5fa884e620f","children":[],"id":"15f28685b324","title":"总的来说，这使得&nbsp;&lt;input&nbsp;type=\"text\"&gt;,&nbsp;&lt;textarea&gt;&nbsp;和&nbsp;&lt;select&gt;&nbsp;之类的标签都非常相似—它们都接受一个&nbsp;value&nbsp;属性，你可以使用它来实现受控组件","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"a5fa884e620f","children":[{"parent":"18730c77b2a8","children":[],"id":"e3a13de5169d","title":"你可以将数组传递到&nbsp;value&nbsp;属性中，以支持在&nbsp;select&nbsp;标签中选择多个选项"}],"id":"18730c77b2a8","title":"注意"}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"#212121","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","bold":false,"font-style":"normal","italic":false,"border-radius":"5px","background-color":"#BBDEFB","lineStype":{"lineType":"curve","lineColor":"#BBDEFB","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#BBDEFB","randomLineColor":"rgb(255,204,204)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"a5fa884e620f","title":"select&nbsp;标签"},{"parent":"root","lineStyle":{"lineColor":"#FFE0B2"},"children":[{"parent":"2c0b8a719934","children":[],"id":"0d17e125fc4e","title":"在&nbsp;HTML&nbsp;中，&lt;input&nbsp;type=\"file\"&gt;&nbsp;允许用户从存储设备中选择一个或多个文件，将其上传到服务器，或通过使用&nbsp;JavaScript&nbsp;的&nbsp;File&nbsp;API&nbsp;进行控制<br>","icons":[{"color":"rgb(191, 30, 27)","name":"priority","index":"0"}]},{"parent":"2c0b8a719934","children":[],"id":"419628db349c","title":"因为它的&nbsp;value&nbsp;只读，所以它是&nbsp;React&nbsp;中的一个非受控组件","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"1"}]}],"style":{"background-color":"#FFE0B2","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":13},"id":"2c0b8a719934","title":"文件&nbsp;input&nbsp;标签<br>"},{"parent":"root","lineStyle":{"lineColor":"#E1BEE7"},"children":[{"parent":"3b7f7da9d693","lineStyle":{"lineColor":"#F57F17"},"children":[{"parent":"b653f7534587","children":[],"id":"06a83c1e3750","title":"当需要处理多个&nbsp;input&nbsp;元素时，我们可以给每个元素添加&nbsp;name&nbsp;属性，并让处理函数根据&nbsp;event.target.name&nbsp;的值选择要执行的操作","icons":[]}],"style":{"background-color":"#F5F5F5","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"b653f7534587","title":"处理多个输入"},{"parent":"3b7f7da9d693","lineStyle":{"lineColor":"#F57F17"},"children":[{"parent":"7edef72a466c","children":[],"id":"3684d9f12d70","title":"在受控组件上指定&nbsp;value&nbsp;的&nbsp;prop&nbsp;会阻止用户更改输入。如果你指定了&nbsp;value，但输入仍可编辑，则可能是你意外地将value&nbsp;设置为&nbsp;undefined&nbsp;或&nbsp;null","icons":[]}],"style":{"background-color":"#F5F5F5","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"7edef72a466c","title":"受控输入空值"},{"parent":"3b7f7da9d693","lineStyle":{"lineColor":"#F57F17"},"children":[{"parent":"6cf06c487621","children":[],"id":"7973c33b6757","title":"有时使用受控组件会很麻烦，因为你需要为数据变化的每种方式都编写事件处理函数，并通过一个&nbsp;React&nbsp;组件传递所有的输入&nbsp;state。当你将之前的代码库转换为&nbsp;React&nbsp;或将&nbsp;React&nbsp;应用程序与非&nbsp;React&nbsp;库集成时，这可能会令人厌烦。在这些情况下，你可能希望使用非受控组件,&nbsp;这是实现输入表单的另一种方式","icons":[]}],"style":{"background-color":"#F5F5F5","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"6cf06c487621","title":"受控组件的替代品"},{"parent":"3b7f7da9d693","lineStyle":{"lineColor":"#F57F17"},"children":[{"parent":"4eb1e8e21a57","children":[],"id":"4f50af7d3292","title":"如果你想寻找包含验证、追踪访问字段以及处理表单提交的完整解决方案，使用&nbsp;Formik&nbsp;是不错的选择。<br>然而，它也是建立在受控组件和管理&nbsp;state&nbsp;的基础之上","icons":[]}],"style":{"background-color":"#F5F5F5","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"4eb1e8e21a57","title":"成熟的解决方案"}],"style":{"background-color":"#E1BEE7","border-radius":"5px","color":"#212121","font-weight":"bold","font-size":13},"id":"3b7f7da9d693","title":"其他"}],"root":true,"theme":"customise_7fd055efa78b","style":{"background-color":"rgb(255, 83, 92)","border-radius":"6px","color":"rgb(255, 255, 255)","font-weight":"bold","border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"root","title":"表单","icons":[{"color":"rgb(255, 255, 255)","name":"","index":"51"}],"structure":"mind_free"}},"meta":{"exportTime":"2022-04-01 23:16:51","member":"60cca488e0b34d55bbf2954f","diagramInfo":{"creator":"60cca488e0b34d55bbf2954f","created":"2022-04-01 17:44:43","modified":"2022-04-01 23:16:30","title":"2.8表单","category":"mind_free"},"id":"6246c98b63768907019fc778","type":"ProcessOn Schema File","version":"1.0"}}