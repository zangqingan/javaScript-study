{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[],"note":"","margin":{"childMarginW":10,"childMarginH":5,"marginW":20,"marginH":10},"watermark":"","children":[{"parent":"root","lineStyle":{"randomLineColor":"rgb(255,204,204)","lineColor":"#7B1FA2"},"children":[{"parent":"812b3a9306dd","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"75f8599ad22f","title":"在本章节中，我们将学习如何封装真正可复用的&nbsp;Clock&nbsp;组件。它将设置自己的计时器并每秒更新一次","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"812b3a9306dd","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"0ef2dcae2dae","note":"\nfunction Clock(props) {\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Hello, world!&lt;/h1&gt;\n      &lt;h2&gt;It is {props.date.toLocaleTimeString()}.&lt;/h2&gt;\n    &lt;/div&gt;\n  );\n}\n\nfunction tick() {\n  ReactDOM.render(\n    &lt;Clock date={new Date()} /&gt;,\n    document.getElementById(&#39;root&#39;)\n  );\n}\n\nsetInterval(tick, 1000);\n","children":[],"id":"8812adb58611","title":"代码"}],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"0ef2dcae2dae","title":"我们可以从封装时钟的外观开始","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"812b3a9306dd","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"258f12824a28","title":"然而，它忽略了一个关键的技术细节：Clock&nbsp;组件需要设置一个计时器，并且需要每秒更新&nbsp;UI,理想情况下，我们希望只编写一次代码，便可以让&nbsp;Clock&nbsp;组件自我更新","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"812b3a9306dd","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"1acc6c85f783","children":[],"style":{"color":"#4CAF50"},"id":"626398bed89d","title":"State&nbsp;与&nbsp;props&nbsp;类似，但是&nbsp;state&nbsp;是私有的，并且完全受控于当前组件"}],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"1acc6c85f783","title":"我们需要在&nbsp;Clock&nbsp;组件中添加&nbsp;“state”&nbsp;来实现这个功能<br>","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"3","text":"&#xe635"}]}],"style":{"background-color":"#7B1FA2","border-radius":"5px","color":"rgb(255, 255, 255)","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"812b3a9306dd","title":"介绍"},{"parent":"root","lineStyle":{"lineColor":"#1976D2"},"children":[{"parent":"3b7f7da9d693","note":"class Clock extends React.Component {\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;h1&gt;Hello, world!&lt;/h1&gt;\n        &lt;h2&gt;It is {this.props.date.toLocaleTimeString()}.&lt;/h2&gt;\n      &lt;/div&gt;\n    );\n  }\n}","children":[{"parent":"4cd5fd16143f","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"1d57845dec4f","title":"创建一个同名的&nbsp;ES6&nbsp;class，并且继承于&nbsp;React.Component","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"4cd5fd16143f","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"0f616bb19aaa","title":"添加一个空的&nbsp;render()&nbsp;方法","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"4cd5fd16143f","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"bb89bb98dcf2","title":"将函数体移动到&nbsp;render()&nbsp;方法之中","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"4cd5fd16143f","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"b2a4794968fd","title":"在&nbsp;render()&nbsp;方法中使用&nbsp;this.props&nbsp;替换&nbsp;props<br>","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"3","text":"&#xe635"}]},{"parent":"4cd5fd16143f","children":[],"id":"3523ce8b7d85","title":"删除剩余的空函数声明<br>","icons":[{"color":"rgb(68, 68, 68)","name":"priority","index":"4"}]}],"id":"4cd5fd16143f","title":"通过以下五步将&nbsp;Clock&nbsp;的函数组件转成&nbsp;class&nbsp;组件"},{"parent":"3b7f7da9d693","note":"","children":[],"id":"d72adcc20691","title":"每次组件更新时&nbsp;render&nbsp;方法都会被调用，但只要在相同的&nbsp;DOM&nbsp;节点中渲染&nbsp;&lt;Clock&nbsp;/&gt;&nbsp;，就仅有一个&nbsp;Clock&nbsp;组件的&nbsp;class&nbsp;实例被创建使用。这就使得我们可以使用如&nbsp;state&nbsp;或生命周期方法等很多其他特性"}],"style":{"background-color":"#1976D2","border-radius":"5px","font-weight":"bold","font-size":13},"id":"3b7f7da9d693","title":"将函数组件转换成&nbsp;class&nbsp;组件"},{"parent":"root","lineStyle":{"lineColor":"#388E3C","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"children":[{"parent":"0291282e6d37","children":[{"parent":"e67f96521dfc","note":"class Clock extends React.Component {\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;h1&gt;Hello, world!&lt;/h1&gt;\n        &lt;h2&gt;It is {this.state.date.toLocaleTimeString()}.&lt;/h2&gt;\n      &lt;/div&gt;\n    );\n  }\n}","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"0e25a6a0a3ce","title":"把&nbsp;render()&nbsp;方法中的&nbsp;this.props.date&nbsp;替换成&nbsp;this.state.date","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"e67f96521dfc","note":"class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;h1&gt;Hello, world!&lt;/h1&gt;\n        &lt;h2&gt;It is {this.state.date.toLocaleTimeString()}.&lt;/h2&gt;\n      &lt;/div&gt;\n    );\n  }\n}","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"d56b506ce56b","title":"添加一个&nbsp;class&nbsp;构造函数，然后在该函数中为&nbsp;this.state&nbsp;赋初值","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"e67f96521dfc","note":"ReactDOM.render(\n  &lt;Clock /&gt;,\n  document.getElementById(&#39;root&#39;)\n);","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"a7a197504cd0","title":"移除&nbsp;&lt;Clock&nbsp;/&gt;&nbsp;元素中的&nbsp;date&nbsp;属性","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"2","text":"&#xe62a"}]}],"id":"e67f96521dfc","title":"通过以下三步将&nbsp;date&nbsp;从&nbsp;props&nbsp;移动到&nbsp;state&nbsp;中"},{"parent":"0291282e6d37","children":[],"id":"1b60876b9573","title":"接下来，我们会设置&nbsp;Clock&nbsp;的计时器并每秒更新它"}],"style":{"padding":"8px 10px 8px 10px","backgroundColor":"#2196F3","color":"rgb(255, 255, 255)","textAlign":"left","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","font-style":"normal","border-radius":"5px","background-color":"#388E3C","lineStype":{"lineColor":"#388E3C","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"box-shadow":"1px 2px 6px #aaa","lineStyle":{"lineColor":"#388E3C","randomLineColor":"rgb(153,204,255)","lineWidth":"2"},"font-family":"微软雅黑","border-width":"0px","border-style":"none"},"id":"0291282e6d37","title":"class&nbsp;组件中添加局部的&nbsp;state<br>"},{"parent":"root","lineStyle":{"randomLineColor":"rgb(153,204,255)","lineColor":"#F57F17"},"children":[{"parent":"b653f7534587","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"4e45887e5c5d","title":"在具有许多组件的应用程序中，当组件被销毁时释放所占用的资源是非常重要的","icons":[{"color":"rgb(99, 171, 247)","name":"priority","index":"0","text":"&#xe67a"}]},{"parent":"b653f7534587","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"464cdf10b55a","title":"当&nbsp;Clock&nbsp;组件第一次被渲染到&nbsp;DOM&nbsp;中的时候，就为其设置一个计时器。这在&nbsp;React&nbsp;中被称为“挂载（mount）”。同时，当&nbsp;DOM&nbsp;中&nbsp;Clock&nbsp;组件被删除的时候，应该清除计时器。这在&nbsp;React&nbsp;中被称为“卸载（unmount）”","icons":[{"color":"rgb(113, 203, 45)","name":"priority","index":"1","text":"&#xe625"}]},{"parent":"b653f7534587","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[],"style":{"lineStype":{"lineType":"curve","lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","bold":false,"font-style":"normal","italic":false},"id":"df19231a906c","title":"我们可以为&nbsp;class&nbsp;组件声明一些特殊的方法，当组件挂载或卸载时就会去执行这些方法,这些方法叫做“生命周期方法”<br>","icons":[{"color":"rgb(255, 159, 26)","name":"priority","index":"2","text":"&#xe62a"}]},{"parent":"b653f7534587","lineStyle":{"lineColor":"#555","lineWidth":1},"children":[{"parent":"a3821005fcb2","note":"  componentDidMount() {\n    this.timerID = setInterval(\n      () =&gt; this.tick(),\n      1000\n    );\n  }","children":[],"id":"b72743bb8baf","title":"代码"}],"style":{"lineStype":{"lineColor":"#555","lineWidth":1},"padding":"2px 8px 2px 8px","color":"#666","lineStyle":{"lineColor":"#555","lineWidth":1},"textAlign":"left","font-weight":"normal","font-size":"13px","font-family":"微软雅黑","font-style":"normal"},"id":"a3821005fcb2","title":"比如，componentDidMount()&nbsp;方法会在组件已经被渲染到&nbsp;DOM&nbsp;中后运行，所以，最好在这里设置计时器","icons":[{"color":"rgb(48, 191, 191)","name":"priority","index":"3","text":"&#xe635"}]},{"parent":"b653f7534587","note":"  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }","children":[],"id":"be2111c6884d","title":"尽管&nbsp;this.props&nbsp;和&nbsp;this.state&nbsp;是&nbsp;React&nbsp;本身设置的，且都拥有特殊的含义，但是其实你可以向&nbsp;class&nbsp;中随意添加不参与数据流（比如计时器&nbsp;ID）的额外字段，我们会在&nbsp;componentWillUnmount()&nbsp;生命周期方法中清除计时器","icons":[{"color":"rgb(68, 68, 68)","name":"priority","index":"4"}]},{"parent":"b653f7534587","children":[{"parent":"9823ad0e8de5","note":"class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () =&gt; this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;h1&gt;Hello, world!&lt;/h1&gt;\n        &lt;h2&gt;It is {this.state.date.toLocaleTimeString()}.&lt;/h2&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n\nReactDOM.render(\n  &lt;Clock /&gt;,\n  document.getElementById(&#39;root&#39;)\n);","children":[],"id":"266bed8f3670","title":"最终代码变成"}],"id":"9823ad0e8de5","title":"最后，我们会实现一个叫&nbsp;tick()&nbsp;的方法，Clock&nbsp;组件每秒都会调用它。使用&nbsp;this.setState()&nbsp;来时刻更新组件&nbsp;state","icons":[{"color":"rgb(68, 68, 68)","name":"priority","index":"5"}]},{"parent":"b653f7534587","children":[{"parent":"adfe89a25d83","children":[],"id":"67c2ae3fb301","title":"当&nbsp;&lt;Clock&nbsp;/&gt;&nbsp;被传给&nbsp;ReactDOM.render()的时候，React&nbsp;会调用&nbsp;Clock&nbsp;组件的构造函数。因为&nbsp;Clock&nbsp;需要显示当前的时间，所以它会用一个包含当前时间的对象来初始化&nbsp;this.state。我们会在之后更新&nbsp;state。"},{"parent":"adfe89a25d83","children":[],"id":"62082830079a","title":"之后&nbsp;React&nbsp;会调用组件的&nbsp;render()&nbsp;方法。这就是&nbsp;React&nbsp;确定该在页面上展示什么的方式。然后&nbsp;React&nbsp;更新&nbsp;DOM&nbsp;来匹配&nbsp;Clock&nbsp;渲染的输出。"},{"parent":"adfe89a25d83","children":[],"id":"dad0b37c5f18","title":"当&nbsp;Clock&nbsp;的输出被插入到&nbsp;DOM&nbsp;中后，React&nbsp;就会调用&nbsp;ComponentDidMount()&nbsp;生命周期方法。在这个方法中，Clock&nbsp;组件向浏览器请求设置一个计时器来每秒调用一次组件的&nbsp;tick()&nbsp;方法。"},{"parent":"adfe89a25d83","children":[],"id":"f0a2ee2d2a8c","title":"浏览器每秒都会调用一次&nbsp;tick()&nbsp;方法。&nbsp;在这方法之中，Clock&nbsp;组件会通过调用&nbsp;setState()&nbsp;来计划进行一次&nbsp;UI&nbsp;更新。得益于&nbsp;setState()&nbsp;的调用，React&nbsp;能够知道&nbsp;state&nbsp;已经改变了，然后会重新调用&nbsp;render()&nbsp;方法来确定页面上该显示什么。这一次，render()&nbsp;方法中的&nbsp;this.state.date&nbsp;就不一样了，如此以来就会渲染输出更新过的时间。React&nbsp;也会相应的更新&nbsp;DOM。"},{"parent":"adfe89a25d83","children":[],"id":"dd3365c7a988","title":"一旦&nbsp;Clock&nbsp;组件从&nbsp;DOM&nbsp;中被移除，React&nbsp;就会调用&nbsp;componentWillUnmount()&nbsp;生命周期方法，这样计时器就停止了。"}],"id":"adfe89a25d83","title":"概括上述过程"}],"style":{"background-color":"#F57F17","border-radius":"5px","color":"rgb(255, 255, 255)","font-weight":"bold","font-size":13,"border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"b653f7534587","title":"将生命周期方法添加到&nbsp;Class&nbsp;中"}],"root":true,"theme":"customise_7fd055efa78b","style":{"background-color":"rgb(255, 83, 92)","border-radius":"6px","color":"rgb(255, 255, 255)","font-weight":"bold","border-color":"rgb(255, 255, 255)","border-width":"0px","border-style":"none"},"id":"root","title":"State&nbsp;&amp;&nbsp;生命周期<br>","icons":[{"color":"rgb(255, 255, 255)","name":"","index":"46"}],"structure":"mind_free"}},"meta":{"exportTime":"2022-04-01 14:14:47","member":"60cca488e0b34d55bbf2954f","diagramInfo":{"creator":"60cca488e0b34d55bbf2954f","created":"2022-03-16 11:13:49","modified":"2022-04-01 14:14:29","title":"2.4.1State & 生命周期","category":"mind_free"},"id":"623155edf346fb07f9300fdd","type":"ProcessOn Schema File","version":"1.0"}}